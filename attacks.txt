1.
Imagine we did not have access to the source. You can simply HTTP request all the source files. One way you could do is by requesting the Makefile('GET /Makefile HTTP/1.0'). This would give you information on what type of programs are powering the server in the background, making it much more easy to exploit. With this information, the attacker can see exactly how the internals of the system, letting them spot buffer overflows as well as potentially server/customer secrets or data encoded. This can be prevented by either permissioning the server source files such that the server can't access them on the fly or running the server in a different location than its source.

2.
One ability we have to do with the zookd server is to run arbitrary executables. In particular we can use this to run the ./zookld command over and over again. Each one of these instances of the process will occupy sockets, memory, and other system resources and will not end unless killed by a sysadmin. With this, one can cause crash the entire server and take down any other programs running on it. You can also run other executables just by calling their path (e.g. /usr/bin/ls) , but you are limited by the fact that you cannot pass arguments to these functions. This can be prevented by only allowing certain executables to run (.cgi s only) or you can have permissions.
